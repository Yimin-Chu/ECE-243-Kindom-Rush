short unsigned int sine[1000] = {0x540D, 0x448B, 0x4D0C, 0x3C29, 0x55CD, 0x55EF, 0x5E50, 0x5E50, 0x5D6D, 0x6670, 0x6670, 0x7754, 0x7F54, 0x7EF4, 0x75B0, 0x8EF4, 0x9716, 0x8E75, 0x8E14, 0x9EB5, 0x9EF6, 0x9EB6, 0xB7DA, 0xAF9B, 0xAF79, 0xB7DA, 0xAF9A, 0xAF9A, 0xB7BA, 0xA7B9, 0xA779, 0xA778, 0x9778, 0x9776, 0x8F76, 0x8716, 0x8756, 0x7671, 0x658E, 0x6F13, 0x65EF, 0x554C, 0x66D2, 0x55CF, 0x55EF, 0x4D6D, 0x4D4C, 0x4D0B, 0x44CB, 0x3C09, 0x540D, 0x3C4B, 0x4D4C, 0x55CD, 0x55EE, 0x5E4F, 0x5E4E, 0x6670, 0x6690, 0x7324, 0x7B84, 0x83A4, 0x6303, 0x83C5, 0x83C5, 0x8C06, 0x7345, 0x9426, 0x8BE6, 0x8C27, 0x9427, 0x9447, 0x9447, 0x9C48, 0x83C7, 0x9778, 0x9778, 0x9778, 0x9FB8, 0x9776, 0x8F77, 0x8F76, 0x8756, 0x7F14, 0x63A8, 0x83A5, 0x83C5, 0x83C5, 0x8364, 0x7BA4, 0x7BA4, 0x7B84, 0x7B84, 0x62C3, 0x62A2, 0x62C3, 0x55CD, 0x4D4C, 0x44CB, 0x3C09, 0x5C6D, 0x44CB, 0x4D4C, 0x55CD, 0x55EF, 0x5E2E, 0x5E4E, 0x668F, 0x6691, 0x7B64, 0x6B23, 0x8364, 0x83A4, 0x6AE3, 0x8384, 0x8384, 0x7303, 0x83A4, 0x83A4, 0x8364, 0x6AE3, 0x7B84, 0x7B84, 0x7323, 0x83C4, 0x97D8, 0x8F77, 0x8F77, 0x8F77, 0x8756, 0x8756, 0x8755, 0x8754, 0x7F55, 0x7324, 0x62A3, 0x7BA4, 0x6303, 0x8364, 0x8364, 0x7B64, 0x7B64, 0x7B64, 0x62A3, 0x62A2, 0x7BA4, 0x5E0F, 0x4D4C, 0x44CB, 0x3C29, 0x540D, 0x44CA, 0x558D, 0x55CD, 0x5E2E, 0x5E2E, 0x66D0, 0x66AF, 0x66D1, 0x7B64, 0x62C3, 0x7344, 0x83A4, 0x7B44, 0x7B44, 0x7D0C, 0x7343, 0x7BA6, 0x8344, 0x7344, 0x7343, 0x7B64, 0x7B64, 0x7B44, 0x7323, 0x9FD8, 0x97B8, 0x8FD7, 0x8757, 0x8797, 0x8756, 0x7F56, 0x7F55, 0x7714, 0x7B64, 0x7B84, 0x8384, 0x62A2, 0x83A4, 0x7B64, 0x7B44, 0x7B64, 0x7343, 0x7B64, 0x7384, 0x6E72, 0x55EE, 0x4D6C, 0x4D2B, 0x3C4A, 0x5C8D, 0x44CB, 0x55AD, 0x55EE, 0x5E0E, 0x5E4F, 0x5E4F, 0x66D0, 0x66B0, 0x7B64, 0x8344, 0x8344, 0x7323, 0x6EF3, 0x7754, 0x76F4, 0x7F55, 0x7F14, 0x8756, 0x8776, 0x8F76, 0x8611, 0x7B84, 0x83A4, 0x7B84, 0x9FD8, 0x9FD8, 0x8FB8, 0x8F97, 0x8757, 0x87B6, 0x7F15, 0x8756, 0x76F4, 0x7B64, 0x7B84, 0x7B23, 0x7324, 0x6EF2, 0x6ED1, 0x66D1, 0x66B0, 0x5E70, 0x66B0, 0x5E50, 0x5E2F, 0x55CE, 0x558D, 0x4D2B, 0x3C29, 0x5C8D, 0x44CB, 0x55AD, 0x5E0E, 0x5E2E, 0x5E4F, 0x5E4F, 0x66B0, 0x66D1, 0x7B64, 0x7B44, 0x7B84, 0x6B03, 0x7712, 0x7753, 0x7713, 0x7F54, 0x7F56, 0x8754, 0x8776, 0x8F76, 0x85F2, 0x8384, 0x7344, 0x8364, 0x9FD9, 0x97D9, 0x9798, 0x8F77, 0x8F76, 0x8756, 0x8756, 0x8755, 0x7F55, 0x7B64, 0x62A3, 0x7B64, 0x7323, 0x6EF2, 0x6ED1, 0x66D1, 0x66B0, 0x66D1, 0x5E4F, 0x5E4E, 0x5DEF, 0x5E0E, 0x558D, 0x4D2C, 0x3C4A, 0x5C8E, 0x4D2B, 0x55AD, 0x55EE, 0x5E4F, 0x5E4F, 0x5E4F, 0x66D0, 0x66D0, 0x7B44, 0x83A4, 0x7B84, 0x6AE3, 0x6F13, 0x7733, 0x76F3, 0x7F54, 0x7F55, 0x7F55, 0x8796, 0x8F97, 0x8EB4, 0x8384, 0x7B64, 0x7B64, 0x9FD9, 0x97B8, 0x9798, 0x8F98, 0x8F76, 0x8756, 0x7F56, 0x7F55, 0x7F34, 0x7B44, 0x62C3, 0x83A4, 0x7323, 0x6EF2, 0x6ED1, 0x66D0, 0x66D0, 0x5E70, 0x6690, 0x5E4F, 0x5E0E, 0x55CE, 0x55AD, 0x4D2C, 0x3C2A, 0x5C8E, 0x44EB, 0x558D, 0x5E2E, 0x5E4F, 0x5E50, 0x6690, 0x5E70, 0x66B1, 0x7B64, 0x7B64, 0x7B44, 0x62A3, 0x6F12, 0x7713, 0x7753, 0x7754, 0x7F54, 0x7F15, 0x8796, 0x8777, 0x8612, 0x6B03, 0x6AA3, 0x83A4, 0x9FFA, 0x97B9, 0x97F8, 0x8FB7, 0x8756, 0x8756, 0x7F55, 0x7F34, 0x7714, 0x7B44, 0x8384, 0x62A2, 0x72E3, 0x6ED1, 0x66D1, 0x6EF0, 0x66D0, 0x6690, 0x6690, 0x5E4F, 0x5E2F, 0x55EE, 0x55CD, 0x4D0C, 0x3C2A, 0x5C4D, 0x44EB, 0x558D, 0x55CF, 0x5E0E, 0x6690, 0x6690, 0x6670, 0x66D1, 0x7B64, 0x7B44, 0x8384, 0x6B03, 0x6F12, 0x7733, 0x7733, 0x7734, 0x7714, 0x7F35, 0x7F55, 0x8756, 0x750D, 0x7B84, 0x8364, 0x7BA4, 0x9FD8, 0x97D8, 0x8FB8, 0x8F76, 0x8756, 0x7F55, 0x7715, 0x7F54, 0x7F54, 0x7B64, 0x7303, 0x7BA4, 0x6B23, 0x6F11, 0x66D0, 0x66B0, 0x6690, 0x6690, 0x66D0, 0x5E50, 0x5E2F, 0x55CE, 0x558D, 0x4D2C, 0x448B, 0x5C8D, 0x44EB, 0x55AD, 0x55CE, 0x5E0F, 0x5E4F, 0x5E4F, 0x5E70, 0x6690, 0x7B44, 0x8364, 0x8344, 0x6BA5, 0x6F12, 0x6EF2, 0x7713, 0x6EF3, 0x7F54, 0x7F55, 0x7F55, 0x8755, 0x86B4, 0x7B84, 0x7BA4, 0x83A4, 0x97B8, 0x8F97, 0x8F97, 0x8796, 0x7F55, 0x7F54, 0x7F54, 0x7754, 0x7753, 0x7323, 0x8364, 0x8384, 0x7323, 0x66D2, 0x66D1, 0x66D0, 0x6690, 0x66B0, 0x5E4F, 0x5E0E, 0x55EE, 0x55CD, 0x558D, 0x4CEC, 0x446A, 0x5C8D, 0x44CB, 0x4D6D, 0x5E0E, 0x5E0F, 0x5E0E, 0x5E4F, 0x666F, 0x66B0, 0x7324, 0x7BA4, 0x83A4, 0x6B03, 0x6F12, 0x6EF1, 0x6F12, 0x7733, 0x7713, 0x7733, 0x7F54, 0x7F54, 0x752D, 0x83A4, 0x7B84, 0x8384, 0x97B7, 0x8776, 0x8776, 0x7F55, 0x7F34, 0x7F54, 0x7714, 0x7732, 0x6F12, 0x6B03, 0x8384, 0x7B43, 0x7303, 0x66D1, 0x66D0, 0x66D0, 0x5E70, 0x5E4F, 0x5E50, 0x5E4F, 0x5E2F, 0x55EE, 0x4D6D, 0x4D2C, 0x446A, 0x542D, 0x44CB, 0x4D4D, 0x55ED, 0x5E2E, 0x5DEF, 0x5E4F, 0x66AF, 0x66B0, 0x7B64, 0x7B64, 0x62A3, 0x62A3, 0x66D1, 0x6F12, 0x6F52, 0x6EF2, 0x6EF2, 0x6F12, 0x7753, 0x7754, 0x7610, 0x62C3, 0x83A4, 0x8384, 0x8776, 0x7F54, 0x7F54, 0x7714, 0x7753, 0x7713, 0x7733, 0x6F12, 0x6EF2, 0x7B64, 0x7B84, 0x8344, 0x6B23, 0x66D0, 0x66D0, 0x66D0, 0x66D0, 0x5E70, 0x5E4E, 0x5E50, 0x55EF, 0x55CD, 0x4D4D, 0x44EB, 0x3C29, 0x5C4D, 0x448B, 0x4D6D, 0x55AD, 0x55CE, 0x5E2E, 0x5E4F, 0x5E4F, 0x66D1, 0x7B44, 0x7BA4, 0x8364, 0x7303, 0x66D1, 0x66D1, 0x6ED0, 0x6EF2, 0x6F32, 0x7753, 0x6EF2, 0x6F12, 0x7610, 0x7B84, 0x7B44, 0x7B44, 0x7F54, 0x7753, 0x7753, 0x6F12, 0x7752, 0x6F32, 0x7752, 0x7732, 0x6EF2, 0x7323, 0x7BA4, 0x8384, 0x7323, 0x66D1, 0x66D0, 0x6670, 0x666F, 0x5E4F, 0x5E4E, 0x5E2E, 0x55EE, 0x558D, 0x558C, 0x44EC, 0x3C29, 0x540D, 0x44AB, 0x4D0C, 0x55AD, 0x55CD, 0x55EE, 0x5E50, 0x5E4F, 0x6690, 0x7B64, 0x8344, 0x6AC3, 0x7323, 0x66D1, 0x6EF1, 0x6EF2, 0x6EF2, 0x6EF2, 0x6ED1, 0x6EF2, 0x6EF2, 0x7671, 0x8384, 0x6B23, 0x83A4, 0x76F3, 0x6EF2, 0x6F32, 0x6ED2, 0x6F32, 0x6F32, 0x6EF2, 0x6F31, 0x6EF2, 0x7B44, 0x7B84, 0x62A2, 0x7323, 0x66D0, 0x666F, 0x66D0, 0x5E4F, 0x5E4E, 0x5E4F, 0x5E4F, 0x55CE, 0x4D4C, 0x4D0B, 0x44CB, 0x33C9, 0x540D, 0x446A, 0x4D0C, 0x4D4C, 0x55AD, 0x5E2E, 0x5E4F, 0x5E4F, 0x5E4F, 0x7B84, 0x62C3, 0x8344, 0x62A3, 0x66D0, 0x66D1, 0x66D0, 0x66D0, 0x6F31, 0x6EF2, 0x66D0, 0x6EF0, 0x6DEE, 0x8384, 0x7B84, 0x83A4, 0x5242, 0x7732, 0x6F32, 0x6ED1, 0x6F31, 0x6EF2, 0x6ED1, 0x66F1, 0x5DEE, 0x7B64, 0x62C3, 0x7B64, 0x7344, 0x66D0, 0x668F, 0x5E6F, 0x5E6F, 0x5E6F, 0x5E4E, 0x5E2E, 0x55AD, 0x4D4D, 0x4D0B, 0x44CB, 0x33A8, 0x540C, 0x3C2A, 0x44CB, 0x4D0C, 0x4D6D, 0x55AD, 0x5E2E, 0x5E2E, 0x6690, 0x7364, 0x62C3, 0x7BA4, 0x72C3, 0x66B0, 0x66D0, 0x66B0, 0x66D0, 0x6EF0, 0x66D0, 0x6690, 0x6F32, 0x658D, 0x7B03, 0x62C3, 0x8364, 0x62C3, 0x7344, 0x7B84, 0x7B44, 0x7B44, 0x7344, 0x7B44, 0x62A2, 0x7B64, 0x7BA4, 0x8384, 0x83A4, 0x7323, 0x6690, 0x5E6F, 0x5E4F, 0x668F, 0x55EE, 0x55EF, 0x55CD, 0x55AD, 0x4D4B, 0x44CB, 0x3C4A, 0x3388, 0x540C, 0x33E9, 0x446A, 0xE5E8, 0x8DC9, 0x96EA, 0x55CE, 0x5DEE, 0x5E50, 0x7384, 0x7BA4, 0x7323, 0x652B, 0x66D0, 0x66D0, 0x66D0, 0x66D0, 0x66F0, 0x66D0, 0x66F0, 0x66B0, 0x6ED2, 0x8364, 0x7B44, 0x8344, 0x7344, 0x83C4, 0x7B84, 0x7B64, 0x62A2, 0x7344, 0x7344, 0x7BA4, 0x8364, 0x7323, 0x6B03, 0x8343, 0x6386, 0x5E70, 0x5E4F, 0x668F, 0x5E4F, 0x55CE, 0x5E4E, 0x4D4D, 0x5DAB, 0x6549, 0x7DE7, 0x3C2A, 0x3388, 0x4329, 0x1A02, 0xB5A8, 0x7B03, 0xB446, 0x9344, 0x55CF, 0x55CE, 0x5E4E, 0x6ED3, 0x7B24, 0x7365, 0x5E70, 0x66AF, 0x66D0, 0x66B0, 0x66CF, 0x66D0, 0x66D0, 0x66D0, 0x66D0, 0x6690, 0x7671, 0x7B23, 0x7324, 0x7343, 0x7B64, 0x83A4, 0x7B84, 0x8384, 0x8344, 0x7343, 0x7B44, 0x7B64, 0x7B84, 0x8364, 0x74EA, 0x5E70, 0x66B0, 0x666E, 0x5E4F, 0x5E4F, 0x5E2E, 0x55CD, 0x55CD, 0xB445, 0x9BA4, 0xAC45, 0x1982, 0x1A02, 0x4329, 0x1A02, 0x1183, 0x7AC3, 0xB4A6, 0x1183, 0x22A2, 0x2B24, 0x2B24, 0x664E, 0xAC25, 0xA3E5, 0xB445, 0x5E4F, 0x66B0, 0x66D0, 0x666E, 0x66D0, 0x5E6E, 0x5E4F, 0x66B0, 0x66D0, 0x66D0, 0x66D0, 0x66D0, 0x66F1, 0x66D1, 0x6F31, 0x66F0, 0x66D0, 0x66F0, 0x66D0, 0x66D0, 0x66D0, 0x5E50, 0x6690, 0x66CF, 0x5E4E, 0x5E4F, 0x5E0F, 0xD5E8, 0x5E0E, 0x2B44, 0xCDC7, 0x2B23, 0x1A22, 0x7405, 0xA3E5, 0x1163, 0x1A02, 0x42A7, 0xC568, 0x9384, 0x5283, 0x1183, 0xB4C6, 0xB466, 0x11E2, 0x2282, 0x1A42, 0x7AE3, 0x5222, 0xA3E5, 0x4D4C, 0x760A, 0x66AE, 0x5E2E, 0x66D0, 0x66D0, 0x66D0, 0x66D0, 0x6690, 0x66D0, 0x5E70, 0x66D0, 0x5E6F, 0x66CF, 0x66B0, 0x66D0, 0x5E4E, 0x66D0, 0x66D0, 0x5E4F, 0x5E50, 0x9EC9, 0x66B0, 0x5E4E, 0x66D0, 0x7D46, 0xAC85, 0x72A3, 0xB445, 0x6505, 0xB445, 0x9364, 0x4303, 0x72A3, 0x1163, 0x1A02, 0x11E2};


void plot_image_sine(int x, int y) {
    for (int i = 0; i < 20; i++) {
        for (int j = 0; j < 50; j++) {
            plot_pixel(x + j, y + i, sine[i * 50 + j]);
        }
    }
}


void erase_image_sine(int x, int y) {
    for (int i = 0; i < 20; i++) {
        for (int j = 0; j < 50; j++) {
            plot_pixel(x + j, y + i, 0);
        }
    }
}
